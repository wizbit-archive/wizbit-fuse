#! /usr/bin/env python

import fuse
import wizbit
import os, stat, errno

fuse.fuse_python_api = (0, 2)

class WizbitStat(fuse.Stat):
    def __init__(self):
        self.st_mode = 0
        self.st_ino = 0
        self.st_dev = 0
        self.st_nlink = 0
        self.st_uid = os.getuid()
        self.st_gid = os.getgid()
        self.st_size = 0
        self.st_atime = 0
        self.st_mtime = 0
        self.st_ctime = 0


class WizbitFs(fuse.Fuse):

    def __init__(self, *args, **kwargs):
        super(WizbitFs, self).__init__(*args, **kwargs)
        self.store = wizbit.Store("uuid", os.path.join(os.path.expanduser('~'), ".wizbit"))

    def getattr(self, path):
        st = WizbitStat()
        if path == '/':
            st.st_mode = stat.S_IFDIR | 0755
            st.st_nlink = 2
        elif True:
            st.st_mode = stat.S_IFREG | 0444
            st.st_nlink = 1
            st.st_size = 9999
        else:
            return -errno.ENOENT
        return st

    def readdir(self, path, offset):
        for i in ('.', '..', 'robs', 'pants'):
            yield fuse.Direntry(i)

    def read(self, path, size, offset):
        bit = wizbit.Bit(self.store, path)
        version = wizbit.Version(bit, bit.primary_tip)

    def write(self, path):
        pass

if __name__ == "__main__":
    server = WizbitFs(version="%prog 1",  usage="./wizbitfs", dash_s_do='setsingle')
    server.threaded = False
    server.parse(errex=1)
    server.main()
